#working version Name:  create_vm_with_disk_4.yaml
#Version:4
#Status: working as expected
#Next Version: 5
#Auth: Anil Rathod
#### 
---
  - hosts: localhost
    gather_facts: no
    vars_files:
        #- host_vars/input_SAPRUN_NormalVM_v3
        - host_vars/input_SAPRUN_NormalVM_v3_working_for_two_dictonary
    vars_prompt:
     - name: "vcenter_user"
       prompt: "Enter vcenter username"
       private: no
     - name: "vcenter_pass"
       prompt: "Enter vcenter password"
       private: yes
    vars:
      no_of_disk: "{{ no_of_disk | int }}"
      vdisk: []
      optional_tags:
         type: eagerzeroedthick
      osdisk:
        osdisk1:
          size_gb: 20
          type: eagerzeroedthick
          datastore: "{{ datastore_vm_os_disk }}"
        osdisk2:
          size_gb: 20
          type: eagerzeroedthick
          datastore: "{{ datastore_vm_os_disk }}"

        
    tasks:
    - name: Display VDSIK Dict
      debug:
        msg: "{{ vdisk }}"
      register: vdisk-display
    - name: Adding OS disk and APP/DB Disk in one Dictonary
      set_fact:
        vdisk: "{{ vdisk | combine(osdisk) }}"
      with_dict: "{{ vdisk }}"
  
    - name: Display new VDISK
      debug:
        msg: "{{ vdisk }} "
#    - name: Adding Disk Type
#      set_fact:
#        vdisk: "{{ vdisk.key + type: eagerzeroedthick }}"
#      with_dict: vdisk
#      register: vdisk_combine

    - name: Create VM "{{ vm_hostname }}"
      vmware_guest:
        name: "{{ vm_hostname }}"
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        validate_certs: no
        cluster: "{{ cluster }}"
        datacenter: "{{ datacenter }}"
        template: "{{ template }}"
        state: poweredon
        folder: "{{ folder }}"
        hardware:
          memory_gb: "{{ memory }}" # memory_mb: "{{ hostvars.memory }}"
          num_cpus: "{{ cpu }}" 
          hotadd_cpu: yes
          hotremove_cpu: yes
          hotadd_memory: yes
        networks:
        - name: "{{ vlan }}"
          ip: "{{ prod_ip }}"
          netmask: "{{ netmask }}"
          gateway: "{{ gateway }}"
          start_connected: yes
        - name: "{{ backup_vlan }}"
          ip: "{{ backup_ip }}"
          netmask: "{{ backup_netmask }}"
          gateway: "{{ backup_gateway }}"
        disk: "{{ vdisk }}"
        #disk: "{{ vmdisk }}"
        customization:
          hostname: "{{ vm_hostname }}"
      delegate_to: localhost
      register: vm 

    - debug:
        var: vm
